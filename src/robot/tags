!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BYTE	tools.h	/^typedef unsigned char BYTE;$/;"	t
BytesToString	tools.c	/^int BytesToString(BYTE *pSrc, char *pDst, int nSrcLength)$/;"	f
CMD_PORT	robot_socket.h	16;"	d
COMMAND_INTERACTION	robot_quene.h	/^typedef struct COMMAND_INTERACTION {$/;"	s
COMMAND_INTERACTION	robot_quene.h	/^} COMMAND_INTERACTION;$/;"	t	typeref:struct:COMMAND_INTERACTION
CTRL_STATE	robot_socket.h	/^} CTRL_STATE;$/;"	t	typeref:struct:_CTRL_STATE
DIR_LUA	tools.h	15;"	d
FAIL	tools.h	13;"	d
FILE_POINTS	tools.h	14;"	d
FILE_PORT	robot_socket.h	18;"	d
LINKQuene	robot_quene.h	/^typedef struct LINKQuene {$/;"	s
LinkQuene	robot_quene.h	/^} LinkQuene;$/;"	t	typeref:struct:LINKQuene
MAX_BUF	tools.h	11;"	d
MAX_MSGHEAD	robot_socket.h	19;"	d
PATH_SEND_LUA	tools.h	16;"	d
QElemType	robot_quene.h	/^typedef COMMAND_INTERACTION QElemType;$/;"	t
QNode	robot_quene.h	/^typedef struct QNode {$/;"	s
Qnode	robot_quene.h	/^} Qnode;$/;"	t	typeref:struct:QNode
SERVER_IP	robot_socket.h	11;"	d
SERVER_IP	robot_socket.h	8;"	d
SOCKET_INFO	robot_socket.h	/^} SOCKET_INFO;$/;"	t	typeref:struct:_SOCKET_INFO
SOCK_SEND_TIMEOUT	robot_socket.h	14;"	d
SOCK_TIMEOUT	robot_socket.h	13;"	d
STATUS_PORT	robot_socket.h	17;"	d
SUCCESS	tools.h	12;"	d
StringToBytes	tools.c	/^int StringToBytes(char *pSrc, BYTE *pDst, int nSrcLength)$/;"	f
_CTRL_STATE	robot_socket.h	/^typedef struct _CTRL_STATE$/;"	s
_SOCKET_INFO	robot_socket.h	/^typedef struct _SOCKET_INFO$/;"	s
act	action_act.c	/^void act(Webs *wp)$/;"	f
action_act_h	action_act.h	2;"	d
action_get_h	action_get.h	2;"	d
action_set_h	action_set.h	2;"	d
action_sta_h	action_sta.h	2;"	d
aliveSlaveNumError	robot_socket.h	/^	uint8_t    aliveSlaveNumError;    \/**< 活动从站数量错误，1：数量错误；0：正常  *\/$/;"	m	struct:_CTRL_STATE
analog_input	robot_socket.h	/^	uint16_t     analog_input[6];         \/**< 模拟输入,四个控制箱,2个工具    *\/$/;"	m	struct:_CTRL_STATE
analog_output	robot_socket.h	/^	uint16_t   analog_output[6];         \/**< 模拟输出,四个控制箱,2个工具    *\/$/;"	m	struct:_CTRL_STATE
avolfileHandler	filehandler.c	/^static int avolfileHandler(Webs *wp)$/;"	f	file:
basic	action_sta.c	/^static int basic()$/;"	f	file:
cb_robot_cur	robot_socket.h	/^	double     cb_robot_cur;            \/**< 控制板机器人电流               *\/$/;"	m	struct:_CTRL_STATE
cb_robot_vol	robot_socket.h	/^	double     cb_robot_vol;            \/**< 控制板机器人电压               *\/$/;"	m	struct:_CTRL_STATE
cb_vol	robot_socket.h	/^	double     cb_vol;					\/**< 控制板电压   				    *\/$/;"	m	struct:_CTRL_STATE
cl_dgt_input_h	robot_socket.h	/^	uint8_t	   cl_dgt_input_h;          \/**< 控制箱数字输入15-8             *\/$/;"	m	struct:_CTRL_STATE
cl_dgt_input_l	robot_socket.h	/^	uint8_t     cl_dgt_input_l;	        \/**< 控制箱数字输入7-0              *\/$/;"	m	struct:_CTRL_STATE
cl_dgt_output_h	robot_socket.h	/^	uint8_t	   cl_dgt_output_h;          \/**< 控制箱数字输出15-8             *\/$/;"	m	struct:_CTRL_STATE
cl_dgt_output_l	robot_socket.h	/^	uint8_t     cl_dgt_output_l;	        \/**< 控制箱数字输出7-0              *\/$/;"	m	struct:_CTRL_STATE
clearquene	robot_quene.c	/^void clearquene(LinkQuene *q)$/;"	f
clrbit	tools.h	10;"	d
cmdPointError	robot_socket.h	/^	uint8_t    cmdPointError;      \/**< 指令点关节位置与末端位姿不符错误，0：正常；1：直线指令错误；2：圆弧指令点错误；3：TPD指令工具与当前工具不符；4：TPD当前指令与下一条指令起始点偏差过大*\/$/;"	m	struct:_CTRL_STATE
cmd_quene	robot_quene.c	/^LinkQuene cmd_quene;$/;"	v
collision_err	robot_socket.h	/^	double     collision_err;           \/**< 碰撞故障                       *\/$/;"	m	struct:_CTRL_STATE
collision_level	robot_socket.h	/^	int        collision_level;         \/**< 碰撞等级,一级敏感,三级不敏感   *\/$/;"	m	struct:_CTRL_STATE
configStatus	robot_socket.h	/^	int        configStatus;            \/**< 机器人关节配置状态  *\/$/;"	m	struct:_CTRL_STATE
connect_status	action_sta.c	/^static int connect_status()$/;"	f	file:
connect_status	robot_socket.h	/^	uint8_t connect_status; \/\/ socket 连接状态$/;"	m	struct:_SOCKET_INFO
content	action_set.c	/^static char *content = NULL;$/;"	v	file:
createnode	robot_quene.c	/^void createnode(QElemType *pnode, int type, char *msgcontent, int state)$/;"	f
ctrl_state	robot_socket.c	/^CTRL_STATE ctrl_state;$/;"	v
ctrl_time	robot_socket.h	/^	double     ctrl_time;               \/**< 控制器实时线程执行时间         *\/$/;"	m	struct:_CTRL_STATE
data	robot_quene.h	/^	QElemType data;$/;"	m	struct:QNode
delay_ms	tools.c	/^void delay_ms(const int timeout)$/;"	f
dequene	robot_quene.c	/^void dequene(LinkQuene *q, QElemType e)$/;"	f
double_round	tools.c	/^double double_round(double dVal, int iPlaces) \/\/iPlaces>=0$/;"	f
download	filehandler.c	/^void download(Webs *wp, char *path, char *query){$/;"	f
dr_com_err	robot_socket.h	/^	double     dr_com_err; 				\/**< 与驱动器通信故障               *\/$/;"	m	struct:_CTRL_STATE
dr_err	robot_socket.h	/^	double	   dr_err;                  \/**< 驱动器哪个轴故障               *\/$/;"	m	struct:_CTRL_STATE
dr_err_code	robot_socket.h	/^	double     dr_err_code;  			\/**< 驱动器故障代码 			    *\/$/;"	m	struct:_CTRL_STATE
drag_enable	robot_socket.h	/^	double     drag_enable;   			\/**< 拖动使能                       *\/$/;"	m	struct:_CTRL_STATE
elbow_vel	robot_socket.h	/^	double     elbow_vel[5];            \/**< 肘速度                         *\/$/;"	m	struct:_CTRL_STATE
enquene	robot_quene.c	/^void enquene(LinkQuene *q, QElemType e)$/;"	f
err_reser	robot_socket.h	/^	double     err_reser;               \/**< 故障预留                       *\/$/;"	m	struct:_CTRL_STATE
fd	robot_socket.h	/^	int fd;$/;"	m	struct:_SOCKET_INFO
fileWriteEvent	filehandler.c	/^static void fileWriteEvent(Webs *wp)$/;"	f	file:
file_quene	robot_quene.c	/^LinkQuene file_quene;$/;"	v
filehandler_h	filehandler.h	2;"	d
flag_zero_set	robot_socket.h	/^	uint8_t     flag_zero_set;           \/**< 机器人零位设定完成标志         *\/$/;"	m	struct:_CTRL_STATE
frame_len	robot_socket.h	/^	int        frame_len;               \/**< 消息帧长度                     *\/$/;"	m	struct:_CTRL_STATE
front	robot_quene.h	/^	Qnode *front;$/;"	m	struct:LINKQuene
get	action_get.c	/^void get(Webs *wp)$/;"	f
get_complete_file_content	tools.c	/^char *get_complete_file_content(const char *file_path)$/;"	f
get_dir_content	tools.c	/^char *get_dir_content(const char *dir_path)$/;"	f
get_file_content	tools.c	/^char *get_file_content(const char *file_path)$/;"	f
get_lua_data	action_get.c	/^static int get_lua_data()$/;"	f	file:
get_n_len	tools.c	/^int get_n_len(const int n)$/;"	f
get_points_file	action_get.c	/^static int get_points_file()$/;"	f	file:
initquene	robot_quene.c	/^void initquene(LinkQuene *q)$/;"	f
is_in	tools.c	/^int is_in(char *s, char *c)$/;"	f
joint_mode	robot_socket.h	/^	double     joint_mode[6];  			\/**< 关节模式					    *\/$/;"	m	struct:_CTRL_STATE
jt_ctl_cur	robot_socket.h	/^	double     jt_ctl_cur[6];			\/**< 关节1-6当前扭矩                *\/$/;"	m	struct:_CTRL_STATE
jt_cur_cur	robot_socket.h	/^	double     jt_cur_cur[6];			\/**< 关节1-6当前电流 		        *\/$/;"	m	struct:_CTRL_STATE
jt_cur_pos	robot_socket.h	/^	double     jt_cur_pos[6];           \/**< 关节1-6当前位置                *\/$/;"	m	struct:_CTRL_STATE
jt_cur_vel	robot_socket.h	/^	double     jt_cur_vel[6]; 			\/**< 关节1-6当前速度                *\/$/;"	m	struct:_CTRL_STATE
jt_cur_vol	robot_socket.h	/^	double     jt_cur_vol[6];           \/**< 关节当前电压                   *\/$/;"	m	struct:_CTRL_STATE
jt_tgt_acc	robot_socket.h	/^	double     jt_tgt_acc[6];			\/**< 关节1-6目标加速度              *\/$/;"	m	struct:_CTRL_STATE
jt_tgt_cur	robot_socket.h	/^	double     jt_tgt_cur[6];			\/**< 关节1-6目标电流		        *\/$/;"	m	struct:_CTRL_STATE
jt_tgt_pos	robot_socket.h	/^	double 	   jt_tgt_pos[6];           \/**< 关节1-6目标位置                *\/$/;"	m	struct:_CTRL_STATE
jt_tgt_tor	robot_socket.h	/^	double 	   jt_tgt_tor[6];           \/**< 关节1-6目标扭矩                *\/$/;"	m	struct:_CTRL_STATE
jt_tgt_vel	robot_socket.h	/^	double     jt_tgt_vel[6];           \/**< 关节1-6目标速度                *\/$/;"	m	struct:_CTRL_STATE
line_number	robot_socket.h	/^	int        line_number;             \/**< 自动运行程序执行到某一指令行号 *\/$/;"	m	struct:_CTRL_STATE
linear_m_bmak	robot_socket.h	/^	double     linear_m_bmak;           \/**< 线性动量基准 				    *\/$/;"	m	struct:_CTRL_STATE
local	tools.h	6;"	d
menu	action_sta.c	/^static int menu()$/;"	f	file:
mode	action_set.c	/^static int mode(const cJSON *data_json)$/;"	f	file:
movej	action_set.c	/^static int movej(const cJSON *data_json)$/;"	f	file:
msgcontent	robot_quene.h	/^	char	*msgcontent;     				\/\/ 消息内容$/;"	m	struct:COMMAND_INTERACTION
msghead	robot_quene.h	/^	int 	msghead;                  		\/\/ 指令信息头，唯一标识$/;"	m	struct:COMMAND_INTERACTION
msghead	robot_socket.h	/^	int msghead; \/\/ 消息头$/;"	m	struct:_SOCKET_INFO
msglen	robot_quene.h	/^	int		msglen;                     	\/\/ 消息内容长度$/;"	m	struct:COMMAND_INTERACTION
next	robot_quene.h	/^	struct QNode *next;$/;"	m	struct:QNode	typeref:struct:QNode::QNode
out_sflimit_err	robot_socket.h	/^	double     out_sflimit_err;         \/**< 超出软限位故障                 *\/$/;"	m	struct:_CTRL_STATE
parse_lua_cmd	action_set.c	/^static int parse_lua_cmd(char *lua_cmd)$/;"	f	file:
printquene	robot_quene.c	/^void printquene(LinkQuene q)$/;"	f
program_pause	action_set.c	/^static int program_pause(const cJSON *data_json)$/;"	f	file:
program_resume	action_set.c	/^static int program_resume(const cJSON *data_json)$/;"	f	file:
program_start	action_set.c	/^static int program_start(const cJSON *data_json)$/;"	f	file:
program_state	robot_socket.h	/^	uint8_t     program_state;           \/**< 程序状态1:停止,2:运行,3：暂停,4：拖动                       *\/$/;"	m	struct:_CTRL_STATE
program_stop	action_set.c	/^static int program_stop(const cJSON *data_json)$/;"	f	file:
program_teach	action_sta.c	/^static int program_teach()$/;"	f	file:
quene_recv_result	robot_quene.c	/^int quene_recv_result(const QElemType node, const LinkQuene q)$/;"	f
queneempty	robot_quene.c	/^int queneempty(LinkQuene *q)$/;"	f
rear	robot_quene.h	/^	Qnode *rear;$/;"	m	struct:LINKQuene
remove_lua_file	action_act.c	/^static int remove_lua_file(const cJSON *data_json)$/;"	f	file:
rename_lua_file	action_act.c	/^static int rename_lua_file(const cJSON *data_json)$/;"	f	file:
ret_f_content	action_get.c	/^static char *ret_f_content = NULL;$/;"	v	file:
ret_status	action_sta.c	/^static char *ret_status = NULL;$/;"	v	file:
robot_mode	robot_socket.h	/^	uint8_t        robot_mode;              \/**< 机器人模式                     *\/$/;"	m	struct:_CTRL_STATE
robot_socket_h	robot_socket.h	2;"	d
runtime	robot_socket.h	/^	double     runtime;                 \/**< 控制器启动时间,断电清零        *\/$/;"	m	struct:_CTRL_STATE
safe_mode	robot_socket.h	/^	double     safe_mode;               \/**< 安全模式                       *\/$/;"	m	struct:_CTRL_STATE
save_lua_file	action_act.c	/^static int save_lua_file(const cJSON *data_json)$/;"	f	file:
sendfile	action_set.c	/^static int sendfile(const cJSON *data_json)$/;"	f	file:
sendfilename	action_set.c	/^static int sendfilename(const cJSON *data_json)$/;"	f	file:
separate_string_to_array	tools.c	/^int separate_string_to_array(char *pszInput, char *pszDelimiters , unsigned int Ary_num, unsigned int Ary_size, char *pszAry_out)$/;"	f
server_ip	robot_socket.h	/^	char server_ip[20];$/;"	m	struct:_SOCKET_INFO
server_port	robot_socket.h	/^	int server_port;$/;"	m	struct:_SOCKET_INFO
set	action_set.c	/^void set(Webs *wp)$/;"	f
setbit	tools.h	9;"	d
slaveComError	robot_socket.h	/^	uint8_t    slaveComError;      \/**< 从站错误，0：正常；1：从站掉线；2：从站状态与设置值不一致；3：从站未配置；4：从站配置错误；5：从站初始化错误；6：从站邮箱通信初始化错误 *\/$/;"	m	struct:_CTRL_STATE
socket_cmd	robot_socket.c	/^SOCKET_INFO socket_cmd;$/;"	v
socket_cmd_recv_thread	robot_socket.c	/^static void *socket_cmd_recv_thread(void *arg)$/;"	f	file:
socket_cmd_send_thread	robot_socket.c	/^static void *socket_cmd_send_thread(void *arg)$/;"	f	file:
socket_cmd_thread	robot_socket.c	/^void *socket_cmd_thread(void *arg)$/;"	f
socket_connect	robot_socket.c	/^static int socket_connect(SOCKET_INFO *sock)$/;"	f	file:
socket_create	robot_socket.c	/^static int socket_create(SOCKET_INFO *sock)$/;"	f	file:
socket_file	robot_socket.c	/^SOCKET_INFO socket_file;$/;"	v
socket_file_recv_thread	robot_socket.c	/^static void *socket_file_recv_thread(void *arg)$/;"	f	file:
socket_file_send_thread	robot_socket.c	/^static void *socket_file_send_thread(void *arg)$/;"	f	file:
socket_file_thread	robot_socket.c	/^void *socket_file_thread(void *arg)$/;"	f
socket_init	robot_socket.c	/^static void socket_init(SOCKET_INFO *sock, const int port)$/;"	f	file:
socket_quene_h	robot_quene.h	2;"	d
socket_recv	robot_socket.c	/^static int socket_recv(SOCKET_INFO *sock, const LinkQuene q)$/;"	f	file:
socket_send	robot_socket.c	/^static int socket_send(const SOCKET_INFO sock, QElemType *node)$/;"	f	file:
socket_status	robot_socket.c	/^SOCKET_INFO socket_status;$/;"	v
socket_status_thread	robot_socket.c	/^void *socket_status_thread(void *arg)$/;"	f
socket_timeout	robot_socket.c	/^static int socket_timeout(int sockfd, const int s)$/;"	f	file:
sta	action_sta.c	/^void sta(Webs *wp)$/;"	f
state	robot_quene.h	/^	int		state;                      	\/\/ 处理状态, 0:init, 1:send to server, 2:recv data $/;"	m	struct:COMMAND_INTERACTION
step_over	action_set.c	/^static int step_over(const cJSON *data_json)$/;"	f	file:
strangePosFlag	robot_socket.h	/^	uint8_t    strangePosFlag;          \/**< 当前处于奇异位姿标志 *\/$/;"	m	struct:_CTRL_STATE
strrpc	tools.c	/^char *strrpc(char *str, const char *oldstr, const char *newstr)$/;"	f
test_data	robot_socket.h	/^	double     test_data;               \/**< 测试数据ur机器人软件使用       *\/$/;"	m	struct:_CTRL_STATE
test_data1	robot_socket.h	/^	double     test_data1;  			\/**< 测试数据ur机器人软件使用       *\/$/;"	m	struct:_CTRL_STATE
test_package	tools.h	7;"	d
timeout	robot_socket.h	/^	int timeout; \/\/ socket select timeout $/;"	m	struct:_SOCKET_INFO
tl_acc	robot_socket.h	/^	double     tl_acc[7];				\/**< 工具加速度     			    *\/$/;"	m	struct:_CTRL_STATE
tl_cur_pos	robot_socket.h	/^	double     tl_cur_pos[6];			\/**< 工具当前位置DKR		        *\/$/;"	m	struct:_CTRL_STATE
tl_cur_vel	robot_socket.h	/^	double	   tl_cur_vel[6];			\/**< 工具当前速度DKR                *\/$/;"	m	struct:_CTRL_STATE
tl_dgt_input_h	robot_socket.h	/^	uint8_t     tl_dgt_input_h;          \/**< 工具数字输入15-8               *\/$/;"	m	struct:_CTRL_STATE
tl_dgt_input_l	robot_socket.h	/^	uint8_t     tl_dgt_input_l;          \/**< 工具数字输入7-0                *\/$/;"	m	struct:_CTRL_STATE
tl_dgt_output_h	robot_socket.h	/^	uint8_t     tl_dgt_output_h;			\/**< 末端工具数字输出15-8     *\/$/;"	m	struct:_CTRL_STATE
tl_dgt_output_l	robot_socket.h	/^	uint8_t     tl_dgt_output_l;			\/**< 末端工具数字输出7-0     *\/$/;"	m	struct:_CTRL_STATE
tl_jtforce	robot_socket.h	/^	double     tl_jtforce[6];			\/**< 工具合力DKR			        *\/$/;"	m	struct:_CTRL_STATE
tl_tgt_pos	robot_socket.h	/^	double     tl_tgt_pos[6];  			\/**< 工具目标位置DKR	            *\/$/;"	m	struct:_CTRL_STATE
tl_tgt_vel	robot_socket.h	/^	double     tl_tgt_vel[6];			\/**< 工具目标速度DKR                *\/$/;"	m	struct:_CTRL_STATE
tmp_dgt_input1	robot_socket.h	/^	uint8_t     tmp_dgt_input1;			\/**< 空闲                           *\/$/;"	m	struct:_CTRL_STATE
tmp_dgt_input2	robot_socket.h	/^	uint8_t     tmp_dgt_input2;			\/**< 空闲                           *\/$/;"	m	struct:_CTRL_STATE
tmp_dgt_input3	robot_socket.h	/^	uint8_t     tmp_dgt_input3;			\/**< 空闲                           *\/$/;"	m	struct:_CTRL_STATE
tmp_dgt_input4	robot_socket.h	/^	uint8_t     tmp_dgt_input4;			\/**< 空闲                           *\/$/;"	m	struct:_CTRL_STATE
tmp_dgt_output3	robot_socket.h	/^	uint8_t     tmp_dgt_output3;			\/**< 空闲                           *\/$/;"	m	struct:_CTRL_STATE
tmp_dgt_output4	robot_socket.h	/^	uint8_t     tmp_dgt_output4;			\/**< 空闲                           *\/$/;"	m	struct:_CTRL_STATE
tmp_dgt_output5	robot_socket.h	/^	uint8_t     tmp_dgt_output5;			\/**< 空闲                           *\/$/;"	m	struct:_CTRL_STATE
tmp_dgt_output6	robot_socket.h	/^	uint8_t     tmp_dgt_output6;			\/**< 空闲                           *\/$/;"	m	struct:_CTRL_STATE
tool_pos_att	robot_socket.h	/^	double     tool_pos_att[6];         \/**< 工具坐标中心相对于末端的位置及姿态 *\/$/;"	m	struct:_CTRL_STATE
tools_h	tools.h	2;"	d
tpd_state	robot_socket.h	/^	uint8_t    tpd_state;               \/**< TPD状态,低位->高位,bit0-允许轨迹记录，bit1-点数超限,bit2-文件保存完成,1为真,0为非 *\/$/;"	m	struct:_CTRL_STATE
type	robot_quene.h	/^	int		type;                       	\/\/ 指令标签,具体参照指令字典位$/;"	m	struct:COMMAND_INTERACTION
upload	filehandler.c	/^void upload(Webs *wp)$/;"	f
vel_ratio	robot_socket.h	/^	double     vel_ratio;               \/**< 机器人运行速度比例             *\/$/;"	m	struct:_CTRL_STATE
write_file	tools.c	/^int write_file(const char *file_name, const char *file_content)$/;"	f
